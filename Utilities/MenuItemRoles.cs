using DbSeed;
using Npgsql;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NpgsqlTypes;

namespace WBS.DBSeed
{
    public class MenuItemRoles
    {
        public void FillMenuItemRoles()
        {
            var InializatorMenus = new List<(string, string)>
            {
                ("Инициатор", "Документы"),
                ("Инициатор", "Таблица разработки"),
                ("Инициатор", "Макет"),
                ("Инициатор", "Заявки на инвестиции"),
                ("Инициатор", "Бюджетные планы"),
                ("Инициатор", "Статистика"),
                ("Инициатор", "Все обработанные мной заявки"),
                ("Инициатор", "Инструкции"),
                ("Инициатор", "Справочники"),
                ("Инициатор", "Ситы"),
                ("Инициатор", "Пользователи"),
                ("Инициатор", "Поставщики"),
                ("Инициатор", "Формат ситов"),
                ("Инициатор", "Типы инвестиций"),
                ("Инициатор", "Центры результатов"),
                ("Инициатор", "Группы категорий"),
                ("Инициатор", "Категории оборудования")

            };
            var readAccessToTheDAIMenus = new List<(string, string)>
            {
                ("Доступ на чтение DAI", "Документы"),
                ("Доступ на чтение DAI", "Таблица разработки"),
                ("Доступ на чтение DAI", "Макет"),
                ("Доступ на чтение DAI", "Заявки на инвестиции"),
                ("Доступ на чтение DAI", "Бюджетные планы"),
                ("Доступ на чтение DAI", "Статистика"),
                ("Доступ на чтение DAI", "Все обработанные мной заявки"),
                ("Доступ на чтение DAI", "Инструкции")
            };
            var generalDirectorMenus = new List<(string, string)>
            {
                ("Генеральный директор", "Документы"),
                ("Генеральный директор", "Таблица разработки"),
                ("Генеральный директор", "Макет"),
                ("Генеральный директор", "Заявки на инвестиции"),
                ("Генеральный директор", "Бюджетные планы"),
                ("Генеральный директор", "Статистика"),
                ("Генеральный директор", "Все обработанные мной заявки"),
                ("Генеральный директор", "Инструкции"),
                ("Генеральный директор", "Справочники"),
                ("Генеральный директор", "Ситы"),
                ("Генеральный директор", "Пользователи"),
                ("Генеральный директор", "Поставщики"),
                ("Генеральный директор", "Типы инвестиций"),
                ("Генеральный директор", "Центры результатов"),
                ("Генеральный директор", "Группы категорий"),
                ("Генеральный директор", "Категории оборудования")
            };
            var DirectorOfKUMenus = new List<(string, string)>
            {
                ("Директор по КУ", "Документы"),
                ("Директор по КУ", "Таблица разработки"),
                ("Директор по КУ", "Макет"),
                ("Директор по КУ", "Заявки на инвестиции"),
                ("Директор по КУ", "Статистика"),
                ("Директор по КУ", "Все обработанные мной заявки"),
                ("Директор по КУ", "Инструкции"),
                ("Директор по КУ", "Справочники"),
                ("Директор по КУ", "Ситы"),
                ("Директор по КУ", "Пользователи"),
                ("Директор по КУ", "Поставщики"),
                ("Директор по КУ", "Центры результатов"),
                ("Директор по КУ", "Группы категорий"),
                ("Директор по КУ", "Категории оборудования")
            };
            var TechnicalManagerMenus = new List<(string, string)>
            {
                ("Техническая служба/руководитель", "Документы"),
                ("Техническая служба/руководитель", "Таблица разработки"),
                ("Техническая служба/руководитель", "Макет"),
                ("Техническая служба/руководитель", "Бюджетные планы"),
                ("Техническая служба/руководитель", "Статистика"),
                ("Техническая служба/руководитель", "Все обработанные мной заявки"),
                ("Техническая служба/руководитель", "Инструкции"),
                ("Техническая служба/руководитель", "Справочники"),
                ("Техническая служба/руководитель", "Ситы"),
                ("Техническая служба/руководитель", "Пользователи"),
                ("Техническая служба/руководитель", "Поставщики"),
                ("Техническая служба/руководитель", "Типы инвестиций"),
                ("Техническая служба/руководитель", "Центры результатов"),
                ("Техническая служба/руководитель", "Группы категорий"),
                ("Техническая служба/руководитель", "Категории оборудования")
            };
            var BookkeepingMenus = new List<(string, string)>
            {
                ("Бухгалтерия", "Документы"),
                ("Бухгалтерия", "Таблица разработки"),
                ("Бухгалтерия", "Макет"),
                ("Бухгалтерия", "Заявки на инвестиции"),
                ("Бухгалтерия", "Бюджетные планы"),
                ("Бухгалтерия", "Статистика"),
                ("Бухгалтерия", "Все обработанные мной заявки"),
                ("Бухгалтерия", "Инструкции"),
                ("Бухгалтерия", "Справочники"),
                ("Бухгалтерия", "Ситы"),
                ("Бухгалтерия", "Пользователи"),
                ("Бухгалтерия", "Поставщики"),
                ("Бухгалтерия", "Типы инвестиций"),
                ("Бухгалтерия", "Центры результатов"),
                ("Бухгалтерия", "Группы категорий"),
                ("Бухгалтерия", "Категории оборудования")

            };
            var AdministratorOfBudgetMenus = new List<(string, string)>
            {
                ("Администратор бюджета", "Документы"),
                ("Администратор бюджета", "Таблица разработки"),
                ("Администратор бюджета", "Макет"),
                ("Администратор бюджета", "Заявки на инвестиции"),
                ("Администратор бюджета", "Бюджетные планы"),
                ("Администратор бюджета", "Статистика"),
                ("Администратор бюджета", "Все обработанные мной заявки"),
                ("Администратор бюджета", "Инструкции"),
                ("Администратор бюджета", "Справочники"),
                ("Администратор бюджета", "Ситы"),
                ("Администратор бюджета", "Пользователи"),
                ("Администратор бюджета", "Поставщики"),
                ("Администратор бюджета", "Типы инвестиций"),
                ("Администратор бюджета", "Центры результатов"),
                ("Администратор бюджета", "Группы категорий"),
                ("Администратор бюджета", "Категории оборудования")

            };
            var TechnicalDirectorateKUMenus = new List<(string, string)>
            {
                ("КУ технической дирекции", "Документы"),
                ("КУ технической дирекции", "Таблица разработки"),
                ("КУ технической дирекции", "Макет"),
                ("КУ технической дирекции", "Заявки на инвестиции"),
                ("КУ технической дирекции", "Бюджетные планы"),
                ("КУ технической дирекции", "Статистика"),
                ("КУ технической дирекции", "Все обработанные мной заявки"),
                ("КУ технической дирекции", "Инструкции"),
                ("КУ технической дирекции", "Справочники"),
                ("КУ технической дирекции", "Ситы"),
                ("КУ технической дирекции", "Пользователи"),
                ("КУ технической дирекции", "Поставщики"),
                ("КУ технической дирекции", "Типы инвестиций"),
                ("КУ технической дирекции", "Центры результатов"),
                ("КУ технической дирекции", "Группы категорий"),
                ("КУ технической дирекции", "Категории оборудования")

            };
            var AdminMenus = new List<(string, string)>
            {
                ("Администратор", "Документы"),
                ("Администратор", "Таблица разработки"),
                ("Администратор", "Макет"),
                ("Администратор", "Заявки на инвестиции"),
                ("Администратор", "Бюджетные планы"),
                ("Администратор", "Статистика"),
                ("Администратор", "Все обработанные мной заявки"),
                ("Администратор", "Инструкции"),
                ("Администратор", "Администрирование"),
                ("Администратор", "Добавить пользователя"),
                ("Администратор", "Журнал изменений"),
                ("Администратор", "Проверка мониторинга системы"),
                ("Администратор", "Справочники"),
                ("Администратор", "Ситы"),
                ("Администратор", "Пользователи"),
                ("Администратор", "Поставщики"),
                ("Администратор", "Формат ситов"),
                ("Администратор", "Типы инвестиций"),
                ("Администратор", "Центры результатов"),
                ("Администратор", "Группы категорий"),
                ("Администратор", "Категории оборудования")
            };
            var ITSupportServiceMenus = new List<(string, string)>
            {
                ("Служба ИТ Поддержки", "Документы"),
                ("Служба ИТ Поддержки", "Таблица разработки"),
                ("Служба ИТ Поддержки", "Макет"),
                ("Служба ИТ Поддержки", "Заявки на инвестиции"),
                ("Служба ИТ Поддержки", "Бюджетные планы"),
                ("Служба ИТ Поддержки", "Статистика"),
                ("Служба ИТ Поддержки", "Все обработанные мной заявки"),
                ("Служба ИТ Поддержки", "Инструкции"),
                ("Служба ИТ Поддержки", "Справочники"),
                ("Служба ИТ Поддержки", "Ситы"),
                ("Служба ИТ Поддержки", "Пользователи"),
                ("Служба ИТ Поддержки", "Поставщики"),
                ("Служба ИТ Поддержки", "Формат ситов"),
                ("Служба ИТ Поддержки", "Типы инвестиций"),
                ("Служба ИТ Поддержки", "Центры результатов"),
                ("Служба ИТ Поддержки", "Группы категорий"),
                ("Служба ИТ Поддержки", "Категории оборудования")

            };
            using (NpgsqlConnection connection = new NpgsqlConnection(Constants.connectionString))
            using (NpgsqlCommand cmd = new NpgsqlCommand(Constants.InsertMenuItemRoles, connection))
            {
                connection.Open();

                foreach(var item in InializatorMenus)
                {
                    cmd.Parameters.Add("@RoleTitle",NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in readAccessToTheDAIMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in generalDirectorMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in DirectorOfKUMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in TechnicalManagerMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in BookkeepingMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in AdministratorOfBudgetMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in TechnicalDirectorateKUMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in AdminMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                foreach (var item in ITSupportServiceMenus)
                {
                    cmd.Parameters.Add("@RoleTitle", NpgsqlDbType.Text).Value = item.Item1;
                    cmd.Parameters.Add("@MenuTitle", NpgsqlDbType.Text).Value = item.Item2;
                    cmd.ExecuteNonQuery();
                    cmd.Parameters.Clear();
                }
                connection.Close();
            }
        }
    }
}
